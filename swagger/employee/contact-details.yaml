tags:
- name: ContactDetails
  description: ContactDetails API

paths:
#[GET] ContactDetails
  /ContactDetails:
    get:
     tags:
     - ContactDetails
     summary: Get all ContactDetails
     responses:
       200:
          description: 'OK'
       500:
          description: 'Server Error'

#[POST] ContactDetails
    post:
      tags:
      - ContactDetails
      summary: Add new ContactDetails
      parameters:
      - name: body
        in: body
        description: ContactDetails data
        required: true
        schema: 
          $ref: '#/definitions/ContactDetails'
      responses:
          responses:
          201:
            description: 'Created'
          400:
            description: 'Bad Request'
          409:
            description: 'Conflict'
          500:
            description: 'Server Error'


#[GET] ContactDetails/id
  /ContactDetails/{id}:
    get:
      tags:
      - ContactDetails
      summary: Find ContactDetails by Id
      parameters:
      - name: id
        in: path
        description: ContactDetails Id
        required: true
      responses:
        200:
            description: 'OK'
        409:
            description: 'Conflict'
        500:
            description: 'Server Error'


#[PUT] ContactDetails/id
    put:
      tags:
      - ContactDetails
      summary: Update ContactDetails By Id
      parameters:
      - name: id
        in: path
        description: ContactDetails Id
        required: true
      - name: body
        in: body
        description: ContactDetails Data
        required: true
        schema:
          $ref: '#/definitions/ContactDetails'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] ContactDetails/id
    delete:
      tags:
      - ContactDetails
      summary: Delete ContactDetails By Id
      parameters:
      - name: id
        in: path
        description: ContactDetails Id
        required: true
        schema:
          type: string
      security:
        - jwt: []
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'


#definitions
definitions: 
  ContactDetails:
    type: object
    required:
     - employee_id
     - mobile
     - personal_email
    properties:
      id:
        description: ContactDetails Id
      employee_id:
        type: string
        description: Employee Id
      mobile:
         type: number
         description: Mobile number of employee
      personal_email:
         type: string
         description: personal email of employee
      permanent_address_is:
         type: string
         enum: ["rented", "owned"]
         description: permanent address type of employee
      permanent_address:
         type: string
         description: permanent address of employee
      current_address_is:
         type: string
         enum: ["rented", "owned"]
         description: current address type of employee
      current_address:
         type: string
         description: current address of employee
      
  

schemes:
  - https
  - http
